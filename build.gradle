plugins {
  id 'java'
  id 'org.springframework.boot' version '3.1.0'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'org.graalvm.buildtools.native' version '0.9.22'
  id 'pl.allegro.tech.build.axion-release' version '1.15.1'
}




project.version = scmVersion.version

scmVersion {
    ignoreUncommittedChanges.set(false) 
     useHighestVersion.set(true)

}



apply plugin: 'java'
group = 'org.springframework.samples'
version = '3.1.0'
sourceCompatibility = '17'

repositories {
  mavenCentral()
}
task buildImage(type: Exec) {
  commandLine 'docker', 'build', '-t', 'petclinic-test:latest', '-f', 'Dockerfile2',  '.'
}
task runDocker(type: Exec){
  dependsOn buildImage
  commandLine 'docker', 'run', '-d', '-p', '8080:8080', '--name', 'petclinic', 'petclinic-test:latest'
}



ext.webjarsFontawesomeVersion = "4.7.0"
ext.webjarsBootstrapVersion = "5.2.3"

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-cache'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'javax.cache:cache-api'
  implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
  runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
  runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
  runtimeOnly 'com.github.ben-manes.caffeine:caffeine'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'com.mysql:mysql-connector-j'
  runtimeOnly 'org.postgresql:postgresql'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.testcontainers:testcontainers'
  testImplementation 'org.testcontainers:postgresql'
  testImplementation 'org.testcontainers:mysql'
  testImplementation "org.testcontainers:junit-jupiter"
  testImplementation 'org.postgresql:postgresql'
}
tasks.named('test') {
  useJUnitPlatform()
}
